name: Tests and Coverage

on:
  push:
    branches: [ main, feature/*, copilot/* ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linter (if available)
      run: |
        # Add linting step if you have a linter configured
        # pip install flake8
        # flake8 pomodoro tests
      continue-on-error: true
    
    - name: Run tests with coverage
      run: |
        pytest --cov=pomodoro --cov=app --cov-report=xml --cov-report=term --cov-report=html -v
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      continue-on-error: true
    
    - name: Upload coverage HTML report as artifact
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.12'
      with:
        name: coverage-report
        path: htmlcov/
    
    - name: Check coverage threshold
      run: |
        coverage report --fail-under=80
    
    - name: Comment PR with coverage
      if: github.event_name == 'pull_request' && matrix.python-version == '3.12'
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ github.token }}
        MINIMUM_GREEN: 80
        MINIMUM_ORANGE: 70
      continue-on-error: true
